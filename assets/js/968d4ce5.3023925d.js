"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[592],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(p,".").concat(f)]||d[f]||u[f]||a;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4881:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return u}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_label:"Deploying (1 min)"},p="Deploying",s={unversionedId:"tutorials/guides/deploying",id:"tutorials/guides/deploying",title:"Deploying",description:"Protostar supports deploying smart contracts to a given network with the protostar deploy command. It has a similar interface to the starknet deploy command. Read the CLI reference for the deploy command to learn more about all supported arguments.",source:"@site/docs/tutorials/guides/deploying.md",sourceDirName:"tutorials/guides",slug:"/tutorials/guides/deploying",permalink:"/protostar/docs/tutorials/guides/deploying",editUrl:"https://github.com/software-mansion/protostar/tree/master/website/docs/tutorials/guides/deploying.md",tags:[],version:"current",frontMatter:{sidebar_label:"Deploying (1 min)"},sidebar:"tutorials",previous:{title:"Dependencies (3 min)",permalink:"/protostar/docs/tutorials/guides/dependencies-management"},next:{title:"Testing (6 min)",permalink:"/protostar/docs/tutorials/guides/testing"}},c={},u=[{value:"Example \u2014 deploying the default contract",id:"example--deploying-the-default-contract",level:2},{value:"Using configuration profiles",id:"using-configuration-profiles",level:2}],d={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"deploying"},"Deploying"),(0,a.kt)("p",null,"Protostar supports deploying smart contracts to a given network with the ",(0,a.kt)("inlineCode",{parentName:"p"},"protostar deploy")," command. It has a similar interface to the ",(0,a.kt)("inlineCode",{parentName:"p"},"starknet deploy")," command. ",(0,a.kt)("a",{parentName:"p",href:"/docs/cli-reference#deploy"},"Read the CLI reference for the deploy command")," to learn more about all supported arguments."),(0,a.kt)("h2",{id:"example--deploying-the-default-contract"},"Example \u2014 deploying the default contract"),(0,a.kt)("p",null,"After ",(0,a.kt)("a",{parentName:"p",href:"/docs/tutorials/guides/compiling"},"compiling your contract"),", you can deploy the contract in the following way."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ protostar deploy ./build/main.json --network alpha-goerli\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell",metastring:'title="Deployment output"',title:'"Deployment','output"':!0},"[INFO] Deploy transaction was sent.\nContract address: 0x06a5ea9e42c921bd58e24b8da9d1fc91a488df0700b173f1c6bb0e453f68afec\nTransaction hash: 0x1cbba90ba0d1fbfba09b1f7a0f987134dd9a02a845ca89244b3272374d37ede\n\nhttps://goerli.voyager.online/contract/0x06a5ea9e42c921bd58e24b8da9d1fc91a488df0700b173f1c6bb0e453f68afec\n")),(0,a.kt)("h2",{id:"using-configuration-profiles"},"Using ",(0,a.kt)("a",{parentName:"h2",href:"/docs/tutorials/project-initialization#configuration-profiles"},"configuration profiles")),(0,a.kt)("p",null,"Configuration profiles allow you to easily reuse configuration for devnet, testnet, and mainnet networks. You can define a network configuration in the ",(0,a.kt)("inlineCode",{parentName:"p"},"protostar.toml")," as demonstrated in the snippet below."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml",metastring:"title=protostar.toml",title:"protostar.toml"},'# ...\n\n# https://github.com/Shard-Labs/starknet-devnet\n[profile.devnet.protostar.deploy]\ngateway-url="http://127.0.0.1:5050/"\n\n[profile.testnet.protostar.deploy]\nnetwork="alpha-goerli"\n\n[profile.mainnet.protostar.deploy]\nnetwork="alpha-mainnet"\n')),(0,a.kt)("p",null,"Then, run ",(0,a.kt)("inlineCode",{parentName:"p"},"deploy")," command with the ",(0,a.kt)("inlineCode",{parentName:"p"},"--profile")," argument."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"protostar -p devnet deploy ./build/main.json\n")))}f.isMDXComponent=!0}}]);